name: CD â€” Terraform Deploy Strapi

on:
  workflow_dispatch:
    inputs:
      image_uri:
        description: 'Full ECR image URI'
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      # AWS creds (forwarded to EC2 via terraform remote-exec)
      TF_VAR_aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      TF_VAR_aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      TF_VAR_aws_region: ${{ secrets.AWS_REGION }}

      # Strapi secrets
      TF_VAR_app_keys: ${{ secrets.STRAPI_APP_KEYS }}
      TF_VAR_api_token_salt: ${{ secrets.STRAPI_API_TOKEN_SALT }}
      TF_VAR_admin_jwt_secret: ${{ secrets.STRAPI_ADMIN_JWT_SECRET }}
      TF_VAR_jwt_secret: ${{ secrets.STRAPI_JWT_SECRET }}

      # Infra vars
      TF_VAR_ssh_private_key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
      TF_VAR_key_name: ${{ secrets.EC2_KEY_NAME }}
      TF_VAR_ami_id: ${{ secrets.AMI_ID }}
      TF_VAR_instance_type: ${{ secrets.INSTANCE_TYPE }}

      # Docker image
      TF_VAR_docker_image_uri: ${{ github.event.inputs.image_uri }}

    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7

      - name: Terraform Init
        working-directory: infra
        run: terraform init

      - name: Force Unlock Terraform State (ignore errors if no lock)
        working-directory: infra
        run: terraform force-unlock -force 14c8a47f-9cfe-1f5a-6fa6-850b2692d89a || true
  

      - name: Terraform Plan
        working-directory: infra
        run: terraform plan -out=tfplan

      - name: Terraform Apply
        working-directory: infra
        run: terraform apply -auto-approve tfplan


